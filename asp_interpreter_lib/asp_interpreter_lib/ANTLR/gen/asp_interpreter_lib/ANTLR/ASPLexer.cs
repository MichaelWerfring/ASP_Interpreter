//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/micha/Desktop/4_Semester/Logikprogrammierung/ASP_Interpreter/asp_interpreter_lib/asp_interpreter_lib/ANTLR/ASP.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace asp_interpreter_lib.ANTLR {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class ASPLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		ID=1, VARIABLE=2, STRING=3, NUMBER=4, ANONYMOUS_VARIABLE=5, DOT=6, COMMA=7, 
		QUERY_MARK=8, COLON=9, SEMICOLON=10, OR=11, NAF=12, CONS=13, PLUS=14, 
		MINUS=15, TIMES=16, DIV=17, AT=18, PAREN_OPEN=19, PAREN_CLOSE=20, SQUARE_OPEN=21, 
		SQUARE_CLOSE=22, CURLY_OPEN=23, CURLY_CLOSE=24, EQUAL=25, UNEQUAL=26, 
		LESS=27, GREATER=28, LESS_OR_EQ=29, GREATER_OR_EQ=30, COMMENT=31, BLANK=32, 
		NEWLINE=33, TAB=34, WS=35;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"ID", "VARIABLE", "STRING", "NUMBER", "ANONYMOUS_VARIABLE", "DOT", "COMMA", 
		"QUERY_MARK", "COLON", "SEMICOLON", "OR", "NAF", "CONS", "PLUS", "MINUS", 
		"TIMES", "DIV", "AT", "PAREN_OPEN", "PAREN_CLOSE", "SQUARE_OPEN", "SQUARE_CLOSE", 
		"CURLY_OPEN", "CURLY_CLOSE", "EQUAL", "UNEQUAL", "LESS", "GREATER", "LESS_OR_EQ", 
		"GREATER_OR_EQ", "COMMENT", "BLANK", "NEWLINE", "TAB", "WS"
	};


	public ASPLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ASPLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, "'_'", "'.'", "','", "'?'", "':'", "';'", 
		"'|'", "'not'", "':-'", "'+'", "'-'", "'*'", "'/'", "'@'", "'('", "')'", 
		"'['", "']'", "'{'", "'}'", "'='", null, "'<'", "'>'", "'<='", "'>='", 
		null, null, null, "'\\t'", "' '"
	};
	private static readonly string[] _SymbolicNames = {
		null, "ID", "VARIABLE", "STRING", "NUMBER", "ANONYMOUS_VARIABLE", "DOT", 
		"COMMA", "QUERY_MARK", "COLON", "SEMICOLON", "OR", "NAF", "CONS", "PLUS", 
		"MINUS", "TIMES", "DIV", "AT", "PAREN_OPEN", "PAREN_CLOSE", "SQUARE_OPEN", 
		"SQUARE_CLOSE", "CURLY_OPEN", "CURLY_CLOSE", "EQUAL", "UNEQUAL", "LESS", 
		"GREATER", "LESS_OR_EQ", "GREATER_OR_EQ", "COMMENT", "BLANK", "NEWLINE", 
		"TAB", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ASP.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ASPLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,35,194,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,1,0,1,
		0,5,0,74,8,0,10,0,12,0,77,9,0,1,1,1,1,5,1,81,8,1,10,1,12,1,84,9,1,1,2,
		1,2,5,2,88,8,2,10,2,12,2,91,9,2,1,2,1,2,1,3,1,3,4,3,97,8,3,11,3,12,3,98,
		3,3,101,8,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
		1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,
		1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,
		1,23,1,24,1,24,1,25,1,25,1,25,1,25,3,25,152,8,25,1,26,1,26,1,27,1,27,1,
		28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,5,30,167,8,30,10,30,12,30,170,
		9,30,3,30,172,8,30,1,30,1,30,1,31,4,31,177,8,31,11,31,12,31,178,1,31,1,
		31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,0,0,35,
		1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
		29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
		53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,1,0,10,1,0,97,122,
		3,0,48,57,65,90,97,122,1,0,65,90,2,0,34,34,94,94,1,0,48,48,1,0,49,57,4,
		0,10,10,42,42,203,203,8224,8224,3,0,10,10,203,203,8224,8224,3,0,9,10,13,
		13,32,32,3,0,10,10,13,13,63,63,202,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,
		0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
		0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,
		0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,
		1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
		0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,
		1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,1,71,1,0,0,
		0,3,78,1,0,0,0,5,85,1,0,0,0,7,100,1,0,0,0,9,102,1,0,0,0,11,104,1,0,0,0,
		13,106,1,0,0,0,15,108,1,0,0,0,17,110,1,0,0,0,19,112,1,0,0,0,21,114,1,0,
		0,0,23,116,1,0,0,0,25,120,1,0,0,0,27,123,1,0,0,0,29,125,1,0,0,0,31,127,
		1,0,0,0,33,129,1,0,0,0,35,131,1,0,0,0,37,133,1,0,0,0,39,135,1,0,0,0,41,
		137,1,0,0,0,43,139,1,0,0,0,45,141,1,0,0,0,47,143,1,0,0,0,49,145,1,0,0,
		0,51,151,1,0,0,0,53,153,1,0,0,0,55,155,1,0,0,0,57,157,1,0,0,0,59,160,1,
		0,0,0,61,163,1,0,0,0,63,176,1,0,0,0,65,182,1,0,0,0,67,186,1,0,0,0,69,190,
		1,0,0,0,71,75,7,0,0,0,72,74,7,1,0,0,73,72,1,0,0,0,74,77,1,0,0,0,75,73,
		1,0,0,0,75,76,1,0,0,0,76,2,1,0,0,0,77,75,1,0,0,0,78,82,7,2,0,0,79,81,7,
		1,0,0,80,79,1,0,0,0,81,84,1,0,0,0,82,80,1,0,0,0,82,83,1,0,0,0,83,4,1,0,
		0,0,84,82,1,0,0,0,85,89,5,34,0,0,86,88,7,3,0,0,87,86,1,0,0,0,88,91,1,0,
		0,0,89,87,1,0,0,0,89,90,1,0,0,0,90,92,1,0,0,0,91,89,1,0,0,0,92,93,5,34,
		0,0,93,6,1,0,0,0,94,101,7,4,0,0,95,97,7,5,0,0,96,95,1,0,0,0,97,98,1,0,
		0,0,98,96,1,0,0,0,98,99,1,0,0,0,99,101,1,0,0,0,100,94,1,0,0,0,100,96,1,
		0,0,0,101,8,1,0,0,0,102,103,5,95,0,0,103,10,1,0,0,0,104,105,5,46,0,0,105,
		12,1,0,0,0,106,107,5,44,0,0,107,14,1,0,0,0,108,109,5,63,0,0,109,16,1,0,
		0,0,110,111,5,58,0,0,111,18,1,0,0,0,112,113,5,59,0,0,113,20,1,0,0,0,114,
		115,5,124,0,0,115,22,1,0,0,0,116,117,5,110,0,0,117,118,5,111,0,0,118,119,
		5,116,0,0,119,24,1,0,0,0,120,121,5,58,0,0,121,122,5,45,0,0,122,26,1,0,
		0,0,123,124,5,43,0,0,124,28,1,0,0,0,125,126,5,45,0,0,126,30,1,0,0,0,127,
		128,5,42,0,0,128,32,1,0,0,0,129,130,5,47,0,0,130,34,1,0,0,0,131,132,5,
		64,0,0,132,36,1,0,0,0,133,134,5,40,0,0,134,38,1,0,0,0,135,136,5,41,0,0,
		136,40,1,0,0,0,137,138,5,91,0,0,138,42,1,0,0,0,139,140,5,93,0,0,140,44,
		1,0,0,0,141,142,5,123,0,0,142,46,1,0,0,0,143,144,5,125,0,0,144,48,1,0,
		0,0,145,146,5,61,0,0,146,50,1,0,0,0,147,148,5,33,0,0,148,152,5,61,0,0,
		149,150,5,60,0,0,150,152,5,62,0,0,151,147,1,0,0,0,151,149,1,0,0,0,152,
		52,1,0,0,0,153,154,5,60,0,0,154,54,1,0,0,0,155,156,5,62,0,0,156,56,1,0,
		0,0,157,158,5,60,0,0,158,159,5,61,0,0,159,58,1,0,0,0,160,161,5,62,0,0,
		161,162,5,61,0,0,162,60,1,0,0,0,163,171,5,37,0,0,164,168,7,6,0,0,165,167,
		7,7,0,0,166,165,1,0,0,0,167,170,1,0,0,0,168,166,1,0,0,0,168,169,1,0,0,
		0,169,172,1,0,0,0,170,168,1,0,0,0,171,164,1,0,0,0,171,172,1,0,0,0,172,
		173,1,0,0,0,173,174,6,30,0,0,174,62,1,0,0,0,175,177,7,8,0,0,176,175,1,
		0,0,0,177,178,1,0,0,0,178,176,1,0,0,0,178,179,1,0,0,0,179,180,1,0,0,0,
		180,181,6,31,0,0,181,64,1,0,0,0,182,183,7,9,0,0,183,184,1,0,0,0,184,185,
		6,32,0,0,185,66,1,0,0,0,186,187,5,9,0,0,187,188,1,0,0,0,188,189,6,33,0,
		0,189,68,1,0,0,0,190,191,5,32,0,0,191,192,1,0,0,0,192,193,6,34,0,0,193,
		70,1,0,0,0,11,0,75,82,87,89,98,100,151,168,171,178,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace asp_interpreter_lib.ANTLR
