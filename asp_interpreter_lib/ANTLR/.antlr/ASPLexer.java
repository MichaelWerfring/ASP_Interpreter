// Generated from d:/FH/Semester 4/Logikprogrammierung ILV/SASP-Projekt/ASP_Interpreter/asp_interpreter_lib/ANTLR/ASP.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class ASPLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		STRING=1, NUMBER=2, ANONYMOUS_VARIABLE=3, DOT=4, COMMA=5, QUERY_MARK=6, 
		COLON=7, SEMICOLON=8, OR=9, NAF=10, CONS=11, PLUS=12, MINUS=13, TIMES=14, 
		DIV=15, AT=16, PAREN_OPEN=17, PAREN_CLOSE=18, SQUARE_OPEN=19, SQUARE_CLOSE=20, 
		CURLY_OPEN=21, CURLY_CLOSE=22, EQUAL=23, LESS=24, GREATER=25, LESS_OR_EQ=26, 
		GREATER_OR_EQ=27, DISUNIFICATION=28, IS=29, ID=30, VARIABLE=31, COMMENT=32, 
		MULTI_LINE_COMMENT=33, BLANK=34, NEWLINE=35, TAB=36, WS=37;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"STRING", "NUMBER", "ANONYMOUS_VARIABLE", "DOT", "COMMA", "QUERY_MARK", 
			"COLON", "SEMICOLON", "OR", "NAF", "CONS", "PLUS", "MINUS", "TIMES", 
			"DIV", "AT", "PAREN_OPEN", "PAREN_CLOSE", "SQUARE_OPEN", "SQUARE_CLOSE", 
			"CURLY_OPEN", "CURLY_CLOSE", "EQUAL", "LESS", "GREATER", "LESS_OR_EQ", 
			"GREATER_OR_EQ", "DISUNIFICATION", "IS", "ID", "VARIABLE", "COMMENT", 
			"MULTI_LINE_COMMENT", "BLANK", "NEWLINE", "TAB", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'_'", "'.'", "','", "'?'", "':'", "';'", "'|'", "'not'", 
			"':-'", "'+'", "'-'", "'*'", "'/'", "'@'", "'('", "')'", "'['", "']'", 
			"'{'", "'}'", "'='", "'<'", "'>'", "'<='", "'>='", "'\\='", "'is'", null, 
			null, null, null, null, null, "'\\t'", "' '"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "STRING", "NUMBER", "ANONYMOUS_VARIABLE", "DOT", "COMMA", "QUERY_MARK", 
			"COLON", "SEMICOLON", "OR", "NAF", "CONS", "PLUS", "MINUS", "TIMES", 
			"DIV", "AT", "PAREN_OPEN", "PAREN_CLOSE", "SQUARE_OPEN", "SQUARE_CLOSE", 
			"CURLY_OPEN", "CURLY_CLOSE", "EQUAL", "LESS", "GREATER", "LESS_OR_EQ", 
			"GREATER_OR_EQ", "DISUNIFICATION", "IS", "ID", "VARIABLE", "COMMENT", 
			"MULTI_LINE_COMMENT", "BLANK", "NEWLINE", "TAB", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ASPLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ASP.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000%\u00d5\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0001\u0000\u0001\u0000"+
		"\u0005\u0000N\b\u0000\n\u0000\f\u0000Q\t\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0005\u0001X\b\u0001\n\u0001\f\u0001"+
		"[\t\u0001\u0003\u0001]\b\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001"+
		"\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001"+
		"\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t"+
		"\u0001\t\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001"+
		"\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001d\u0001\u001d\u0005\u001d\u009e\b\u001d\n\u001d\f\u001d\u00a1\t\u001d"+
		"\u0001\u001e\u0001\u001e\u0005\u001e\u00a5\b\u001e\n\u001e\f\u001e\u00a8"+
		"\t\u001e\u0001\u001f\u0001\u001f\u0005\u001f\u00ac\b\u001f\n\u001f\f\u001f"+
		"\u00af\t\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001 "+
		"\u0001 \u0001 \u0001 \u0005 \u00b9\b \n \f \u00bc\t \u0001 \u0001 \u0001"+
		" \u0001 \u0001 \u0001!\u0004!\u00c4\b!\u000b!\f!\u00c5\u0001!\u0001!\u0001"+
		"\"\u0001\"\u0001\"\u0001\"\u0001#\u0001#\u0001#\u0001#\u0001$\u0001$\u0001"+
		"$\u0001$\u0001\u00ba\u0000%\u0001\u0001\u0003\u0002\u0005\u0003\u0007"+
		"\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b"+
		"\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013"+
		"\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d"+
		";\u001e=\u001f? A!C\"E#G$I%\u0001\u0000\t\u0002\u0000\"\"^^\u0001\u0000"+
		"00\u0001\u000019\u0001\u000009\u0001\u0000az\u0004\u000009AZ__az\u0001"+
		"\u0000AZ\u0003\u0000\n\n\r\r??\u0003\u0000\t\n\r\r  \u00dc\u0000\u0001"+
		"\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005"+
		"\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001"+
		"\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000"+
		"\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000"+
		"\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000"+
		"\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000"+
		"\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000"+
		"\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000"+
		"\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000"+
		"\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001"+
		"\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000"+
		"\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u0000"+
		"5\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001"+
		"\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000"+
		"\u0000\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000"+
		"C\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001"+
		"\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0001K\u0001\u0000\u0000"+
		"\u0000\u0003\\\u0001\u0000\u0000\u0000\u0005^\u0001\u0000\u0000\u0000"+
		"\u0007`\u0001\u0000\u0000\u0000\tb\u0001\u0000\u0000\u0000\u000bd\u0001"+
		"\u0000\u0000\u0000\rf\u0001\u0000\u0000\u0000\u000fh\u0001\u0000\u0000"+
		"\u0000\u0011j\u0001\u0000\u0000\u0000\u0013l\u0001\u0000\u0000\u0000\u0015"+
		"p\u0001\u0000\u0000\u0000\u0017s\u0001\u0000\u0000\u0000\u0019u\u0001"+
		"\u0000\u0000\u0000\u001bw\u0001\u0000\u0000\u0000\u001dy\u0001\u0000\u0000"+
		"\u0000\u001f{\u0001\u0000\u0000\u0000!}\u0001\u0000\u0000\u0000#\u007f"+
		"\u0001\u0000\u0000\u0000%\u0081\u0001\u0000\u0000\u0000\'\u0083\u0001"+
		"\u0000\u0000\u0000)\u0085\u0001\u0000\u0000\u0000+\u0087\u0001\u0000\u0000"+
		"\u0000-\u0089\u0001\u0000\u0000\u0000/\u008b\u0001\u0000\u0000\u00001"+
		"\u008d\u0001\u0000\u0000\u00003\u008f\u0001\u0000\u0000\u00005\u0092\u0001"+
		"\u0000\u0000\u00007\u0095\u0001\u0000\u0000\u00009\u0098\u0001\u0000\u0000"+
		"\u0000;\u009b\u0001\u0000\u0000\u0000=\u00a2\u0001\u0000\u0000\u0000?"+
		"\u00a9\u0001\u0000\u0000\u0000A\u00b4\u0001\u0000\u0000\u0000C\u00c3\u0001"+
		"\u0000\u0000\u0000E\u00c9\u0001\u0000\u0000\u0000G\u00cd\u0001\u0000\u0000"+
		"\u0000I\u00d1\u0001\u0000\u0000\u0000KO\u0005\"\u0000\u0000LN\u0007\u0000"+
		"\u0000\u0000ML\u0001\u0000\u0000\u0000NQ\u0001\u0000\u0000\u0000OM\u0001"+
		"\u0000\u0000\u0000OP\u0001\u0000\u0000\u0000PR\u0001\u0000\u0000\u0000"+
		"QO\u0001\u0000\u0000\u0000RS\u0005\"\u0000\u0000S\u0002\u0001\u0000\u0000"+
		"\u0000T]\u0007\u0001\u0000\u0000UY\u0007\u0002\u0000\u0000VX\u0007\u0003"+
		"\u0000\u0000WV\u0001\u0000\u0000\u0000X[\u0001\u0000\u0000\u0000YW\u0001"+
		"\u0000\u0000\u0000YZ\u0001\u0000\u0000\u0000Z]\u0001\u0000\u0000\u0000"+
		"[Y\u0001\u0000\u0000\u0000\\T\u0001\u0000\u0000\u0000\\U\u0001\u0000\u0000"+
		"\u0000]\u0004\u0001\u0000\u0000\u0000^_\u0005_\u0000\u0000_\u0006\u0001"+
		"\u0000\u0000\u0000`a\u0005.\u0000\u0000a\b\u0001\u0000\u0000\u0000bc\u0005"+
		",\u0000\u0000c\n\u0001\u0000\u0000\u0000de\u0005?\u0000\u0000e\f\u0001"+
		"\u0000\u0000\u0000fg\u0005:\u0000\u0000g\u000e\u0001\u0000\u0000\u0000"+
		"hi\u0005;\u0000\u0000i\u0010\u0001\u0000\u0000\u0000jk\u0005|\u0000\u0000"+
		"k\u0012\u0001\u0000\u0000\u0000lm\u0005n\u0000\u0000mn\u0005o\u0000\u0000"+
		"no\u0005t\u0000\u0000o\u0014\u0001\u0000\u0000\u0000pq\u0005:\u0000\u0000"+
		"qr\u0005-\u0000\u0000r\u0016\u0001\u0000\u0000\u0000st\u0005+\u0000\u0000"+
		"t\u0018\u0001\u0000\u0000\u0000uv\u0005-\u0000\u0000v\u001a\u0001\u0000"+
		"\u0000\u0000wx\u0005*\u0000\u0000x\u001c\u0001\u0000\u0000\u0000yz\u0005"+
		"/\u0000\u0000z\u001e\u0001\u0000\u0000\u0000{|\u0005@\u0000\u0000| \u0001"+
		"\u0000\u0000\u0000}~\u0005(\u0000\u0000~\"\u0001\u0000\u0000\u0000\u007f"+
		"\u0080\u0005)\u0000\u0000\u0080$\u0001\u0000\u0000\u0000\u0081\u0082\u0005"+
		"[\u0000\u0000\u0082&\u0001\u0000\u0000\u0000\u0083\u0084\u0005]\u0000"+
		"\u0000\u0084(\u0001\u0000\u0000\u0000\u0085\u0086\u0005{\u0000\u0000\u0086"+
		"*\u0001\u0000\u0000\u0000\u0087\u0088\u0005}\u0000\u0000\u0088,\u0001"+
		"\u0000\u0000\u0000\u0089\u008a\u0005=\u0000\u0000\u008a.\u0001\u0000\u0000"+
		"\u0000\u008b\u008c\u0005<\u0000\u0000\u008c0\u0001\u0000\u0000\u0000\u008d"+
		"\u008e\u0005>\u0000\u0000\u008e2\u0001\u0000\u0000\u0000\u008f\u0090\u0005"+
		"<\u0000\u0000\u0090\u0091\u0005=\u0000\u0000\u00914\u0001\u0000\u0000"+
		"\u0000\u0092\u0093\u0005>\u0000\u0000\u0093\u0094\u0005=\u0000\u0000\u0094"+
		"6\u0001\u0000\u0000\u0000\u0095\u0096\u0005\\\u0000\u0000\u0096\u0097"+
		"\u0005=\u0000\u0000\u00978\u0001\u0000\u0000\u0000\u0098\u0099\u0005i"+
		"\u0000\u0000\u0099\u009a\u0005s\u0000\u0000\u009a:\u0001\u0000\u0000\u0000"+
		"\u009b\u009f\u0007\u0004\u0000\u0000\u009c\u009e\u0007\u0005\u0000\u0000"+
		"\u009d\u009c\u0001\u0000\u0000\u0000\u009e\u00a1\u0001\u0000\u0000\u0000"+
		"\u009f\u009d\u0001\u0000\u0000\u0000\u009f\u00a0\u0001\u0000\u0000\u0000"+
		"\u00a0<\u0001\u0000\u0000\u0000\u00a1\u009f\u0001\u0000\u0000\u0000\u00a2"+
		"\u00a6\u0007\u0006\u0000\u0000\u00a3\u00a5\u0007\u0005\u0000\u0000\u00a4"+
		"\u00a3\u0001\u0000\u0000\u0000\u00a5\u00a8\u0001\u0000\u0000\u0000\u00a6"+
		"\u00a4\u0001\u0000\u0000\u0000\u00a6\u00a7\u0001\u0000\u0000\u0000\u00a7"+
		">\u0001\u0000\u0000\u0000\u00a8\u00a6\u0001\u0000\u0000\u0000\u00a9\u00ad"+
		"\u0005%\u0000\u0000\u00aa\u00ac\b\u0007\u0000\u0000\u00ab\u00aa\u0001"+
		"\u0000\u0000\u0000\u00ac\u00af\u0001\u0000\u0000\u0000\u00ad\u00ab\u0001"+
		"\u0000\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000\u00ae\u00b0\u0001"+
		"\u0000\u0000\u0000\u00af\u00ad\u0001\u0000\u0000\u0000\u00b0\u00b1\u0007"+
		"\u0007\u0000\u0000\u00b1\u00b2\u0001\u0000\u0000\u0000\u00b2\u00b3\u0006"+
		"\u001f\u0000\u0000\u00b3@\u0001\u0000\u0000\u0000\u00b4\u00b5\u0005%\u0000"+
		"\u0000\u00b5\u00b6\u0005*\u0000\u0000\u00b6\u00ba\u0001\u0000\u0000\u0000"+
		"\u00b7\u00b9\t\u0000\u0000\u0000\u00b8\u00b7\u0001\u0000\u0000\u0000\u00b9"+
		"\u00bc\u0001\u0000\u0000\u0000\u00ba\u00bb\u0001\u0000\u0000\u0000\u00ba"+
		"\u00b8\u0001\u0000\u0000\u0000\u00bb\u00bd\u0001\u0000\u0000\u0000\u00bc"+
		"\u00ba\u0001\u0000\u0000\u0000\u00bd\u00be\u0005*\u0000\u0000\u00be\u00bf"+
		"\u0005%\u0000\u0000\u00bf\u00c0\u0001\u0000\u0000\u0000\u00c0\u00c1\u0006"+
		" \u0000\u0000\u00c1B\u0001\u0000\u0000\u0000\u00c2\u00c4\u0007\b\u0000"+
		"\u0000\u00c3\u00c2\u0001\u0000\u0000\u0000\u00c4\u00c5\u0001\u0000\u0000"+
		"\u0000\u00c5\u00c3\u0001\u0000\u0000\u0000\u00c5\u00c6\u0001\u0000\u0000"+
		"\u0000\u00c6\u00c7\u0001\u0000\u0000\u0000\u00c7\u00c8\u0006!\u0000\u0000"+
		"\u00c8D\u0001\u0000\u0000\u0000\u00c9\u00ca\u0007\u0007\u0000\u0000\u00ca"+
		"\u00cb\u0001\u0000\u0000\u0000\u00cb\u00cc\u0006\"\u0000\u0000\u00ccF"+
		"\u0001\u0000\u0000\u0000\u00cd\u00ce\u0005\t\u0000\u0000\u00ce\u00cf\u0001"+
		"\u0000\u0000\u0000\u00cf\u00d0\u0006#\u0000\u0000\u00d0H\u0001\u0000\u0000"+
		"\u0000\u00d1\u00d2\u0005 \u0000\u0000\u00d2\u00d3\u0001\u0000\u0000\u0000"+
		"\u00d3\u00d4\u0006$\u0000\u0000\u00d4J\u0001\u0000\u0000\u0000\n\u0000"+
		"MOY\\\u009f\u00a6\u00ad\u00ba\u00c5\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}